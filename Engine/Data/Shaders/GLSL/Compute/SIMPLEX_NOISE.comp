#version 450

#include "NOISE.h"

layout( local_size_x = 16, local_size_y = 16 ) in;

layout( set = 0, binding = 0 ) writeonly uniform image2D noiseImage;

void main()
{
   vec2 uv = gl_GlobalInvocationID.xy / vec2( params.width, params.height );
   uv      = uv * vec2( params.width / params.height, 1.0 ) + params.seed;

   // Fractal Brownian Motion (FBM)
   float finalNoise = fbm( uv );

   imageStore( noiseImage, ivec2( gl_GlobalInvocationID.xy ), vec4( vec3( finalNoise ), 1.0 ) );
}
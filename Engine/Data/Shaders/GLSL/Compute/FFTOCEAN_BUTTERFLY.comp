#version 450

#include "FFTOCEAN.h"

layout( local_size_x = 16, local_size_y = 16 ) in;

layout( push_constant ) uniform PUSH { OceanParams params; };

layout( set = 0, binding = 0, rgba32f ) readonly uniform image2D butterflyTexture;
layout( set = 0, binding = 1, rg32f ) uniform image2D pingpong0;
layout( set = 0, binding = 2, rg32f ) uniform image2D pingpong1;

struct complex
{
   float real;
   float im;
};

complex mul( complex c0, complex c1 )
{
   complex c;
   c.real = c0.real * c1.real - c0.im * c1.im;
   c.im   = c0.real * c1.im + c0.im * c1.real;
   return c;
}

complex add( complex c0, complex c1 )
{
   complex c;
   c.real = c0.real + c1.real;
   c.im   = c0.im + c1.im;
   return c;
}

void horizontalButterflies()
{
   const ivec2 x = ivec2( gl_GlobalInvocationID.xy );

   if( params.pingpong == 0 )
   {
      const vec4 data = imageLoad( butterflyTexture, ivec2( params.stage, x.x ) ).rgba;

      const vec2 p_ = imageLoad( pingpong0, ivec2( data.z, x.y ) ).rg;
      const vec2 q_ = imageLoad( pingpong0, ivec2( data.w, x.y ) ).rg;
      const vec2 w_ = vec2( data.x, data.y );

      const complex p = complex( p_.x, p_.y );
      const complex q = complex( q_.x, q_.y );
      const complex w = complex( w_.x, w_.y );

      const complex H = add( p, mul( w, q ) );

      imageStore( pingpong1, x, vec4( H.real, H.im, 0, 1 ) );
   }
   else if( params.pingpong == 1 )
   {
      const vec4 data = imageLoad( butterflyTexture, ivec2( params.stage, x.x ) ).rgba;

      const vec2 p_ = imageLoad( pingpong1, ivec2( data.z, x.y ) ).rg;
      const vec2 q_ = imageLoad( pingpong1, ivec2( data.w, x.y ) ).rg;
      const vec2 w_ = vec2( data.x, data.y );

      const complex p = complex( p_.x, p_.y );
      const complex q = complex( q_.x, q_.y );
      const complex w = complex( w_.x, w_.y );

      const complex H = add( p, mul( w, q ) );

      imageStore( pingpong0, x, vec4( H.real, H.im, 0, 1 ) );
   }
}

void verticalButterflies()
{
   complex H;
   const ivec2 x = ivec2( gl_GlobalInvocationID.xy );

   if( params.pingpong == 0 )
   {
      const vec4 data = imageLoad( butterflyTexture, ivec2( params.stage, x.y ) ).rgba;

      const vec2 p_ = imageLoad( pingpong0, ivec2( x.x, data.z ) ).rg;
      const vec2 q_ = imageLoad( pingpong0, ivec2( x.x, data.w ) ).rg;
      const vec2 w_ = vec2( data.x, data.y );

      const complex p = complex( p_.x, p_.y );
      const complex q = complex( q_.x, q_.y );
      const complex w = complex( w_.x, w_.y );

      H = add( p, mul( w, q ) );

      imageStore( pingpong1, x, vec4( H.real, H.im, 0, 1 ) );
   }
   else if( params.pingpong == 1 )
   {
      const vec4 data = imageLoad( butterflyTexture, ivec2( params.stage, x.y ) ).rgba;

      const vec2 p_ = imageLoad( pingpong1, ivec2( x.x, data.z ) ).rg;
      const vec2 q_ = imageLoad( pingpong1, ivec2( x.x, data.w ) ).rg;
      const vec2 w_ = vec2( data.x, data.y );

      const complex p = complex( p_.x, p_.y );
      const complex q = complex( q_.x, q_.y );
      const complex w = complex( w_.x, w_.y );

      H = add( p, mul( w, q ) );

      imageStore( pingpong0, x, vec4( H.real, H.im, 0, 1 ) );
   }
}

void main()
{
   if( params.direction == 0 )
   {
      horizontalButterflies();
   }
   else if( params.direction == 1 )
   {
      verticalButterflies();
   }
}